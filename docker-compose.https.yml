version: "3.9"

services:
  mongo:
    image: mongo:7
    container_name: taller-mongo
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db

  backend:
    build:
      context: .
      dockerfile: Backend/Dockerfile
    container_name: taller-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongo:27017}
      - MONGODB_DB=${MONGODB_DB:-taller}
      - JWT_SECRET=${JWT_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - UPLOAD_DRIVER=${UPLOAD_DRIVER:-cloudinary}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - CLD_FOLDER=${CLD_FOLDER:-taller}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PUBLIC_RATE_MAX=${PUBLIC_RATE_MAX:-120}
      - CHECKOUT_RATE_MAX=${CHECKOUT_RATE_MAX:-30}
      - AUTH_RATE_MAX=${AUTH_RATE_MAX:-40}
      - CACHE_VERSION=${CACHE_VERSION:-v1}
    depends_on:
      - mongo
    volumes:
      - uploads_data:/app/uploads

  frontend:
    build:
      context: .
      dockerfile: Frontend/Dockerfile
    container_name: taller-frontend
    restart: unless-stopped
    depends_on:
      - backend

  caddy:
    image: caddy:2.8
    container_name: taller-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile.example:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend

volumes:
  mongo_data:
  uploads_data:
  caddy_data:
  caddy_config:
